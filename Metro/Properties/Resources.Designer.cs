//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.2034
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpchListBuilder.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SpchListBuilder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} repository {1} contains {2} files.
        /// </summary>
        public static string _0_repository_1_contains_2_fil {
            get {
                return ResourceManager.GetString("_0_repository_1_contains_2_fil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на _About.
        /// </summary>
        public static string _About {
            get {
                return ResourceManager.GetString("_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на _Options.
        /// </summary>
        public static string _Options {
            get {
                return ResourceManager.GetString("_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на undefined error.
        /// </summary>
        public static string _unknown_error {
            get {
                return ResourceManager.GetString("_unknown_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на _VCS executables.
        /// </summary>
        public static string _VCS_executables {
            get {
                return ResourceManager.GetString("_VCS_executables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на _Version &amp; revision.
        /// </summary>
        public static string _Version {
            get {
                return ResourceManager.GetString("_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selected to.
        /// </summary>
        public static string Add_to {
            get {
                return ResourceManager.GetString("Add_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на already started the process of obtaining data.
        /// </summary>
        public static string another_process_is_running {
            get {
                return ResourceManager.GetString("another_process_is_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SPLIT POST COMMIT HOOK allows you to create and maintain a new SVN/GIT/HG repository based on the file list.
        ///SpchListBuilder is an application for creating a list of files for the SPCH based on the repository.
        ///More information is available on the links below:.
        /// </summary>
        public static string AppAboutText {
            get {
                return ResourceManager.GetString("AppAboutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на commit: : [{0}/{1}] : {2} : ({3}) {4}.
        /// </summary>
        public static string commit_0_1_2_3 {
            get {
                return ResourceManager.GetString("commit_0_1_2_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на the data has no entries, the repository is empty?.
        /// </summary>
        public static string data_filed_count_is_0_abor {
            get {
                return ResourceManager.GetString("data_filed_count_is_0_abor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на data can not be converted.
        /// </summary>
        public static string data_serialization_error_a {
            get {
                return ResourceManager.GetString("data_serialization_error_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Task:.
        /// </summary>
        public static string Data_Task {
            get {
                return ResourceManager.GetString("Data_Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default expand view repository.
        /// </summary>
        public static string Default_expand_view_repository {
            get {
                return ResourceManager.GetString("Default_expand_view_repository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output split list format, default XML.
        /// </summary>
        public static string Default_output_list_format {
            get {
                return ResourceManager.GetString("Default_output_list_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disabled.
        /// </summary>
        public static string Disabled {
            get {
                return ResourceManager.GetString("Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enabled.
        /// </summary>
        public static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error:.
        /// </summary>
        public static string Error0 {
            get {
                return ResourceManager.GetString("Error0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Execution: {0} -&gt; EXPORT data for this action is not valid.
        /// </summary>
        public static string Exec_0_EXPORT_Setup_data_not_v {
            get {
                return ResourceManager.GetString("Exec_0_EXPORT_Setup_data_not_v", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Execution: {0} -&gt; The data for this action does not have the desired label: {1}.
        /// </summary>
        public static string Exec_0_Setup_data_not_valid_la {
            get {
                return ResourceManager.GetString("Exec_0_Setup_data_not_valid_la", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на the VCS executable file is missing.
        /// </summary>
        public static string exec_file_not_found {
            get {
                return ResourceManager.GetString("exec_file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Execution: Data set with error.
        /// </summary>
        public static string Exec_Setup_data_is_not_OK {
            get {
                return ResourceManager.GetString("Exec_Setup_data_is_not_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на export.
        /// </summary>
        public static string export {
            get {
                return ResourceManager.GetString("export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на save the full list of files.
        /// </summary>
        public static string export_all_files_list {
            get {
                return ResourceManager.GetString("export_all_files_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на save the list of selected files.
        /// </summary>
        public static string export_selected_files_list {
            get {
                return ResourceManager.GetString("export_selected_files_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export Data:.
        /// </summary>
        public static string Export_Task {
            get {
                return ResourceManager.GetString("Export_Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на the file extensions list is empty.
        /// </summary>
        public static string extension_list_is_empty {
            get {
                return ResourceManager.GetString("extension_list_is_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на file://.
        /// </summary>
        public static string file {
            get {
                return ResourceManager.GetString("file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FillData:.
        /// </summary>
        public static string FillData {
            get {
                return ResourceManager.GetString("FillData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Find All installed VCS executable.
        /// </summary>
        public static string Find_All_installed_executable {
            get {
                return ResourceManager.GetString("Find_All_installed_executable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GetData:.
        /// </summary>
        public static string GetData {
            get {
                return ResourceManager.GetString("GetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на input data is empty and can not be processed.
        /// </summary>
        public static string GetData_input_variable_is_empt {
            get {
                return ResourceManager.GetString("GetData_input_variable_is_empt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на git://.
        /// </summary>
        public static string git {
            get {
                return ResourceManager.GetString("git", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на hg://.
        /// </summary>
        public static string hg {
            get {
                return ResourceManager.GetString("hg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на load a saved list.
        /// </summary>
        public static string import_files_list {
            get {
                return ResourceManager.GetString("import_files_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The path to the VCS executable is not specified.
        /// </summary>
        public static string input_exec_path_is_empty_abort {
            get {
                return ResourceManager.GetString("input_exec_path_is_empty_abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на enter the URL or path to the repository.
        /// </summary>
        public static string input_VCS_url_is_empty_abort {
            get {
                return ResourceManager.GetString("input_VCS_url_is_empty_abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на list.
        /// </summary>
        public static string List {
            get {
                return ResourceManager.GetString("List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load {0} complete.
        /// </summary>
        public static string Load_0_complete {
            get {
                return ResourceManager.GetString("Load_0_complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load: {0}, last edit date: {1}.
        /// </summary>
        public static string Load_0_last_edit_date_1 {
            get {
                return ResourceManager.GetString("Load_0_last_edit_date_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load repo: {0} ...
        /// </summary>
        public static string Load_repo_0 {
            get {
                return ResourceManager.GetString("Load_repo_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no files selected for the list.
        /// </summary>
        public static string no_files_selected_abort {
            get {
                return ResourceManager.GetString("no_files_selected_abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на list of items in the repository is empty.
        /// </summary>
        public static string no_items_from_repo_list {
            get {
                return ResourceManager.GetString("no_items_from_repo_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NONE.
        /// </summary>
        public static string NONE {
            get {
                return ResourceManager.GetString("NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The selected VCS does not support the current operation.
        /// </summary>
        public static string not_supported_VCS_operation {
            get {
                return ResourceManager.GetString("not_supported_VCS_operation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open GitHub Url.
        /// </summary>
        public static string Open_GitHub_Url {
            get {
                return ResourceManager.GetString("Open_GitHub_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation cancelled.
        /// </summary>
        public static string Operation_Cancelled {
            get {
                return ResourceManager.GetString("Operation_Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation fault.
        /// </summary>
        public static string Operation_fault {
            get {
                return ResourceManager.GetString("Operation_fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output &apos;split list&apos; repository file name.
        /// </summary>
        public static string Output_split_list_repository_f {
            get {
                return ResourceManager.GetString("Output_split_list_repository_f", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setup.
        /// </summary>
        public static string PageSetup {
            get {
                return ResourceManager.GetString("PageSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на path or url to repository.
        /// </summary>
        public static string path_or_url_to_repository {
            get {
                return ResourceManager.GetString("path_or_url_to_repository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UnSelected to.
        /// </summary>
        public static string Remove_to {
            get {
                return ResourceManager.GetString("Remove_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove VCS binary.
        /// </summary>
        public static string Remove_VCS_binary {
            get {
                return ResourceManager.GetString("Remove_VCS_binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search VCS binary.
        /// </summary>
        public static string Search_VCS_binary {
            get {
                return ResourceManager.GetString("Search_VCS_binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select executable files.
        /// </summary>
        public static string Select_executable_files {
            get {
                return ResourceManager.GetString("Select_executable_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select VCS binary.
        /// </summary>
        public static string Select_VCS_binary {
            get {
                return ResourceManager.GetString("Select_VCS_binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select before VCS type: svn | git | hg.
        /// </summary>
        public static string select_VCS_type_for_request {
            get {
                return ResourceManager.GetString("select_VCS_type_for_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на settings.
        /// </summary>
        public static string settings {
            get {
                return ResourceManager.GetString("settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SPCH List Builder.
        /// </summary>
        public static string SPCH_List_Builder {
            get {
                return ResourceManager.GetString("SPCH_List_Builder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SPCH save list files (.
        /// </summary>
        public static string SPCH_list_files {
            get {
                return ResourceManager.GetString("SPCH_list_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The downloaded file is empty, try to load a different file.
        /// </summary>
        public static string Split_list_empty_load_another {
            get {
                return ResourceManager.GetString("Split_list_empty_load_another", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No files selected, can not save list.
        /// </summary>
        public static string Split_list_empty_select_files_ {
            get {
                return ResourceManager.GetString("Split_list_empty_select_files_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на svn://.
        /// </summary>
        public static string svn {
            get {
                return ResourceManager.GetString("svn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TEXT.
        /// </summary>
        public static string TEXT {
            get {
                return ResourceManager.GetString("TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid Uri type, specify directory or Url.
        /// </summary>
        public static string Type_Uri_not_validate_use_path {
            get {
                return ResourceManager.GetString("Type_Uri_not_validate_use_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uri repository address is empty.
        /// </summary>
        public static string Uri_is_empty {
            get {
                return ResourceManager.GetString("Uri_is_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на URL or path to repository not specified.
        /// </summary>
        public static string Uri_or_Path_is_empty {
            get {
                return ResourceManager.GetString("Uri_or_Path_is_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VCS binary path:.
        /// </summary>
        public static string vcs_binary_path {
            get {
                return ResourceManager.GetString("vcs_binary_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VCS executable files (.
        /// </summary>
        public static string VCS_executable_files {
            get {
                return ResourceManager.GetString("VCS_executable_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} return:.
        /// </summary>
        public static string VCS_return {
            get {
                return ResourceManager.GetString("VCS_return", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no VCS type selected.
        /// </summary>
        public static string VCS_type_not_selected_abort {
            get {
                return ResourceManager.GetString("VCS_type_not_selected_abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XML .
        /// </summary>
        public static string XML {
            get {
                return ResourceManager.GetString("XML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The downloaded file is corrupt or empty.
        /// </summary>
        public static string Xml_file_empty_or_corrupt {
            get {
                return ResourceManager.GetString("Xml_file_empty_or_corrupt", resourceCulture);
            }
        }
    }
}
