<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_0_repository_1_contains_2_fil" xml:space="preserve">
    <value>{0} repository {1} contains {2} files</value>
  </data>
  <data name="_About" xml:space="preserve">
    <value>_About</value>
  </data>
  <data name="_Options" xml:space="preserve">
    <value>_Options</value>
  </data>
  <data name="_Repo_Settings" xml:space="preserve">
    <value>_Split repository settings</value>
  </data>
  <data name="_unknown_error" xml:space="preserve">
    <value>undefined error</value>
  </data>
  <data name="_VCS_executables" xml:space="preserve">
    <value>_VCS executables</value>
  </data>
  <data name="_Version" xml:space="preserve">
    <value>_Version &amp; revision</value>
  </data>
  <data name="Active_user_id_Linux_only" xml:space="preserve">
    <value>Active user id (Linux only):</value>
  </data>
  <data name="Add_to" xml:space="preserve">
    <value>Selected to</value>
  </data>
  <data name="another_process_is_running" xml:space="preserve">
    <value>already started the process of obtaining data</value>
  </data>
  <data name="AppAboutText" xml:space="preserve">
    <value>SPLIT POST COMMIT HOOK allows you to create and maintain a new SVN/GIT/HG repository based on the file list.
SpchListBuilder is an application for creating a list of files for the SPCH based on the repository.
More information is available on the links below:</value>
  </data>
  <data name="commit_0_1_2_3" xml:space="preserve">
    <value>commit: : [{0}/{1}] : {2} : ({3}) {4}</value>
  </data>
  <data name="data_filed_count_is_0_abor" xml:space="preserve">
    <value>the data has no entries, the repository is empty?</value>
  </data>
  <data name="data_serialization_error_a" xml:space="preserve">
    <value>data can not be converted</value>
  </data>
  <data name="Data_Task" xml:space="preserve">
    <value>Data Task:</value>
  </data>
  <data name="Default_expand_view_repository" xml:space="preserve">
    <value>Default expand view repository</value>
  </data>
  <data name="Default_output_list_format" xml:space="preserve">
    <value>Output split list format, default XML</value>
  </data>
  <data name="Disable_force_overwrite_files" xml:space="preserve">
    <value>Disable force overwrite files</value>
  </data>
  <data name="Disable_fork_and_daemonize" xml:space="preserve">
    <value>Disable fork and daemonize</value>
  </data>
  <data name="Disable_quiet_mode" xml:space="preserve">
    <value>Disable quiet mode</value>
  </data>
  <data name="Disable_YAML_deploy_stage" xml:space="preserve">
    <value>Disable YAML deploy stage</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Enable_force_overwrite_files" xml:space="preserve">
    <value>Enable force overwrite files</value>
  </data>
  <data name="Enable_fork_and_daemonize" xml:space="preserve">
    <value>Enable fork and daemonize</value>
  </data>
  <data name="Enable_quiet_mode" xml:space="preserve">
    <value>Enable quiet mode</value>
  </data>
  <data name="Enable_YAML_deploy_stage" xml:space="preserve">
    <value>Enable YAML deploy stage</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Error0" xml:space="preserve">
    <value>Error:</value>
  </data>
  <data name="Exec_0_EXPORT_Setup_data_not_v" xml:space="preserve">
    <value>Execution: {0} -&gt; EXPORT data for this action is not valid</value>
  </data>
  <data name="Exec_0_Setup_data_not_valid_la" xml:space="preserve">
    <value>Execution: {0} -&gt; The data for this action does not have the desired label: {1}</value>
  </data>
  <data name="exec_file_not_found" xml:space="preserve">
    <value>the VCS executable file is missing</value>
  </data>
  <data name="Exec_Setup_data_is_not_OK" xml:space="preserve">
    <value>Execution: Data set with error</value>
  </data>
  <data name="export" xml:space="preserve">
    <value>export</value>
  </data>
  <data name="export_all_files_list" xml:space="preserve">
    <value>save the full list of files</value>
  </data>
  <data name="export_selected_files_list" xml:space="preserve">
    <value>save the list of selected files</value>
  </data>
  <data name="Export_Task" xml:space="preserve">
    <value>Export Data:</value>
  </data>
  <data name="extension_list_is_empty" xml:space="preserve">
    <value>the file extensions list is empty</value>
  </data>
  <data name="file" xml:space="preserve">
    <value>file://</value>
  </data>
  <data name="FillData" xml:space="preserve">
    <value>FillData:</value>
  </data>
  <data name="Find_All_installed_executable" xml:space="preserve">
    <value>Find All installed VCS executable</value>
  </data>
  <data name="GetData" xml:space="preserve">
    <value>GetData:</value>
  </data>
  <data name="GetData_input_variable_is_empt" xml:space="preserve">
    <value>input data is empty and can not be processed</value>
  </data>
  <data name="git" xml:space="preserve">
    <value>git://</value>
  </data>
  <data name="hg" xml:space="preserve">
    <value>hg://</value>
  </data>
  <data name="import_files_list" xml:space="preserve">
    <value>load a saved list</value>
  </data>
  <data name="input_exec_path_is_empty_abort" xml:space="preserve">
    <value>The path to the VCS executable is not specified</value>
  </data>
  <data name="input_VCS_url_is_empty_abort" xml:space="preserve">
    <value>enter the URL or path to the repository</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>list</value>
  </data>
  <data name="Load_0_complete" xml:space="preserve">
    <value>Load {0} complete</value>
  </data>
  <data name="Load_0_last_edit_date_1" xml:space="preserve">
    <value>Load: {0}, last edit date: {1}</value>
  </data>
  <data name="Load_repo_0" xml:space="preserve">
    <value>Load repo: {0} ..</value>
  </data>
  <data name="no_files_selected_abort" xml:space="preserve">
    <value>no files selected for the list</value>
  </data>
  <data name="no_items_from_repo_list" xml:space="preserve">
    <value>list of items in the repository is empty</value>
  </data>
  <data name="NONE" xml:space="preserve">
    <value>NONE</value>
  </data>
  <data name="not_supported_VCS_operation" xml:space="preserve">
    <value>The selected VCS does not support the current operation</value>
  </data>
  <data name="Open_GitHub_Url" xml:space="preserve">
    <value>Open GitHub Url</value>
  </data>
  <data name="Operation_Cancelled" xml:space="preserve">
    <value>Operation cancelled</value>
  </data>
  <data name="Operation_fault" xml:space="preserve">
    <value>Operation fault</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options:</value>
  </data>
  <data name="Output_split_list_repository_f" xml:space="preserve">
    <value>Output 'split list' repository file name</value>
  </data>
  <data name="PageSetup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="path_or_url_to_repository" xml:space="preserve">
    <value>path or url to repository</value>
  </data>
  <data name="Path_settings" xml:space="preserve">
    <value>Path settings:</value>
  </data>
  <data name="Remove_to" xml:space="preserve">
    <value>UnSelected to</value>
  </data>
  <data name="Remove_VCS_binary" xml:space="preserve">
    <value>Remove VCS binary</value>
  </data>
  <data name="Rename_Append_files_prefix" xml:space="preserve">
    <value>Rename/Append files prefix:</value>
  </data>
  <data name="rename_copied_files_sample_pre" xml:space="preserve">
    <value>Rename copied files, sample prefix 'new' to 'old', or add one prefix 'old' if 'new' is not defined.</value>
  </data>
  <data name="Search_VCS_binary" xml:space="preserve">
    <value>Search VCS binary</value>
  </data>
  <data name="Select_executable_files" xml:space="preserve">
    <value>Select executable files</value>
  </data>
  <data name="Select_VCS_binary" xml:space="preserve">
    <value>Select VCS binary</value>
  </data>
  <data name="select_VCS_type_for_request" xml:space="preserve">
    <value>select before VCS type: svn | git | hg</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="SPCH_List_Builder" xml:space="preserve">
    <value>SPCH List Builder</value>
  </data>
  <data name="SPCH_list_files" xml:space="preserve">
    <value>SPCH save list files (</value>
  </data>
  <data name="Split_list_empty_load_another" xml:space="preserve">
    <value>The downloaded file is empty, try to load a different file</value>
  </data>
  <data name="Split_list_empty_select_files_" xml:space="preserve">
    <value>No files selected, can not save list</value>
  </data>
  <data name="svn" xml:space="preserve">
    <value>svn://</value>
  </data>
  <data name="TEXT" xml:space="preserve">
    <value>TEXT</value>
  </data>
  <data name="Type_Uri_not_validate_use_path" xml:space="preserve">
    <value>Invalid Uri type, specify directory or Url</value>
  </data>
  <data name="Uri_is_empty" xml:space="preserve">
    <value>Uri repository address is empty</value>
  </data>
  <data name="Uri_or_Path_is_empty" xml:space="preserve">
    <value>URL or path to repository not specified</value>
  </data>
  <data name="vcs_binary_path" xml:space="preserve">
    <value>VCS binary path:</value>
  </data>
  <data name="VCS_executable_files" xml:space="preserve">
    <value>VCS executable files (</value>
  </data>
  <data name="VCS_return" xml:space="preserve">
    <value>{0} return:</value>
  </data>
  <data name="VCS_type_not_selected_abort" xml:space="preserve">
    <value>no VCS type selected</value>
  </data>
  <data name="W_Add_prefix_old" xml:space="preserve">
    <value>Add/Replace old prefix</value>
  </data>
  <data name="W_BackUp_directory_path" xml:space="preserve">
    <value>BackUp directory path</value>
  </data>
  <data name="W_ChangeLog_format" xml:space="preserve">
    <value>Create ChangeLog format</value>
  </data>
  <data name="W_Deploy_script_path" xml:space="preserve">
    <value>Deploy script path</value>
  </data>
  <data name="W_Files_check_mask" xml:space="preserve">
    <value>Files check mask</value>
  </data>
  <data name="W_Output_list_repository" xml:space="preserve">
    <value>Output list repository file name</value>
  </data>
  <data name="W_Replace_prefix_new" xml:space="preserve">
    <value>Replace this new prefix</value>
  </data>
  <data name="W_Split_repository_path" xml:space="preserve">
    <value>Split repository path</value>
  </data>
  <data name="W_User_uid" xml:space="preserve">
    <value>User uid, no root access</value>
  </data>
  <data name="W_VCS_binary_exec_path" xml:space="preserve">
    <value>VCS binary exec path</value>
  </data>
  <data name="XML" xml:space="preserve">
    <value>XML </value>
  </data>
  <data name="Xml_file_empty_or_corrupt" xml:space="preserve">
    <value>The downloaded file is corrupt or empty</value>
  </data>
  <data name="W_Log_directory_path" xml:space="preserve">
    <value>Log files directory path</value>
  </data>
</root>